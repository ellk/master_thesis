<?php

namespace Viz\DataVizBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;
use Symfony\Component\Validator\Constraints\NotNull;

/**
 * MetaNodesRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MetaNodesRepository extends EntityRepository
{
    public function getMetaNodes(){

        $qb = $this->createQueryBuilder('mn')
            ->select('distinct mn.id','mn.num_nodes','mn.num_edges','mn.density')
            ->where('mn.num_nodes>50')
            ->addOrderBy('mn.id', 'ASC');


        $md= $qb->getQuery()
            ->getResult();

        $metanodes= array();
        $attributes=array();
        $h= array();
        $count=1;
        while(!empty($md)){
        foreach($md as $mdel){
            $attributes['num_nodes']=$mdel['num_nodes'];
            $attributes['num_edges']=$mdel['num_edges'];
            $attributes['density']=$mdel['density'];
            $nid=$mdel['id'];
            $hasht= $this->getEntityManager()->getRepository('VizDataVizBundle:ClusterHashtags')
                ->getClHashtags($nid);
            if(!empty($hasht)){
            foreach($hasht as $ha){
                $h[]=$ha['cl_hashtag'];
            }
            $attributes['hashtags']=$h;
            $h=array();
            }
            array_push($metanodes,array("id"=>$mdel['id'],"label"=>$count,"attributes"=>array($attributes)));
            $count++;
        }
    }
        return $metanodes;
    }


}
